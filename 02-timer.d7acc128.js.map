{"mappings":"sEACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAUC,GAC/B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,UAAU,oC,WCG5B,SAASC,EAAkBC,EAAQC,GAC/B,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CACjC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDhB,OAAOC,eAAeQ,EAAQI,EAAWI,IAAKJ,E,EAftDb,OAAOC,eAAeiB,EAAS,aAAc,CACzCf,OAAO,IAEXe,EAAQd,QACR,SAAsBE,EAAaa,EAAYC,GACvCD,GAAYX,EAAkBF,EAAYe,UAAWF,GACrDC,GAAaZ,EAAkBF,EAAac,GAChD,OAAOd,C,ECJX,IAAMgB,EAAUC,SAASC,cAAc,oBACjCC,EAAQF,SAASC,cAAc,sBAC/BE,EAAWH,SAASC,cAAc,UAClCG,EAASJ,SAASC,cAAc,mBAChCI,EAAUL,SAASC,cAAc,oBACjCK,EAAQN,SAASC,cAAc,sBAC/BM,EAAQP,SAASC,cAAc,sBAErCC,EAAMM,UAAUC,IAAI,YACpB,IAAIC,EAAW,KA2Bf,SAASC,EAAI/B,GACT,OAAOgC,OAAOhC,GAAOiC,SAAS,EAAG,I,CAGrC,IAAMC,EAAU,CACZC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAA,SAAQC,GACJC,QAAQC,IAAIF,EAAc,IAEvBA,EAAc,GAAKH,KAAKM,OACvBC,OAAOC,QAAQ,sCACfhB,EAAW,IAAIQ,OAEfhB,EAAMyB,UAAW,EACjBzB,EAAMM,UAAUoB,OAAO,YACvBlB,EAAWW,EAAc,G,GAuC3BQ,EAAQ,IAAf,W,sBAhCGC,I,aAEEC,KAAKC,UAAW,EAChBD,KAAKE,QAAU,KACf/B,EAAMyB,UAAW,C,iBAErBjC,IAAA,a,MAAA,W,WACQqC,KAAKC,WAGbD,KAAKC,UAAW,EAChBD,KAAKE,QAAUC,aAAY,WACvB,IA5DWC,EAGTC,EACAC,EACAC,EAuDIC,EAAcrB,KAAKM,MACnBgB,EAAY9B,EAAW6B,EACvBE,GA9DKN,EA8DkBK,EA3D3BJ,EAASM,IAETJ,EAAa,IADbD,EAAOD,MAYN,CAAEO,KARIhC,EAAIiC,KAAKC,MAAMV,EAAKG,IAQlBQ,MANDnC,EAAIiC,KAAKC,MAAMV,EAAMG,EAAOD,IAMpBU,QAJNpC,EAAIiC,KAAKC,MAAMV,EAAOG,EAAOD,EAAQD,IAItBY,QAFfrC,EAAIiC,KAAKC,MAAMV,EAAQG,EAAOD,EAAQD,EAZvC,QA8DH7B,EAAM0C,YAAcR,EAAWO,QAC/B1C,EAAM2C,YAAcR,EAAWM,QAC/B1C,EAAQ4C,YAAcR,EAAWK,MACjC1C,EAAO6C,YAAcR,EAAWE,KAC5BH,GAAa,IACbU,EAAKC,OACLhD,EAASiD,UAAY,gB,GAElC,K,IAGH1D,IAAA,Y,MAAA,WACI2D,cAActB,KAAKE,Q,OAIxB,IACCqB,UAAUvD,EAASe,GACnBZ,EAAMqD,iBAAiB,SAAS,W,OAAM1B,EAAM2B,Y","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/02-timer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","//import flatpickr from \"flatpickr\";\n//import 'flatpickr/dist/flatpickr.min.css';\n//import { Notify } from \"notiflix\";\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst btnEl = document.querySelector('button[data-start]');\nconst timerDiv = document.querySelector('.timer');\nconst daysEl = document.querySelector('span[data-days]');\nconst hoursEl = document.querySelector('span[data-hours]');\nconst minEl = document.querySelector('span[data-minutes]');\nconst secEl = document.querySelector('span[data-seconds]');\n\nbtnEl.classList.add('disabled');\nlet userDate = null;\n\n\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = pad(Math.floor(ms / day));\n    // Remaining hours\n    const hours = pad(Math.floor((ms % day) / hour));\n    // Remaining minutes\n    const minutes = pad(Math.floor(((ms % day) % hour) / minute));\n    // Remaining seconds\n    const seconds = pad(Math.floor((((ms % day) % hour) % minute) / second));\n\n    return { days, hours, minutes, seconds };\n}\n\n//   console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n//   console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n//   console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nfunction pad(value) {\n    return String(value).padStart(2, '0');\n}\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        console.log(selectedDates[0]);\n\n        if(selectedDates[0] < Date.now()) {\n            Notify.failure('Please choose a date in the future');\n            userDate = new Date();\n        } else { \n            btnEl.disabled = false;\n            btnEl.classList.remove('disabled');\n            userDate = selectedDates[0];\n        }\n    },\n};\n\n\n\nclass Timer  {\n    constructor() {\n        this.isActive = false;\n        this.timerId = null;\n        btnEl.disabled = true;\n    }\n    timerStart() {\n        if (this.isActive) {\n            return;\n        }\n    this.isActive = true;\n    this.timerId = setInterval(()=> {\n        const currentTime = Date.now();\n        const deltaTime = userDate - currentTime;\n        const components = convertMs(deltaTime);\n\n                secEl.textContent = components.seconds;\n                minEl.textContent = components.minutes;\n                hoursEl.textContent = components.hours;\n                daysEl.textContent = components.days;\n                if (deltaTime <= 0) {\n                    this.stop();\n                    timerDiv.innerHTML = \"Time is over!\";\n                } \n    }, 1000)\n\n    }\n    timerStop() {\n        clearInterval(this.timerId);\n    }\n}\n\n    const timer = new Timer();\n    flatpickr(inputEl, options);\n    btnEl.addEventListener('click', () => timer.timerStart());"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$84b9dae4df53835d$var$inputEl","document","querySelector","$84b9dae4df53835d$var$btnEl","$84b9dae4df53835d$var$timerDiv","$84b9dae4df53835d$var$daysEl","$84b9dae4df53835d$var$hoursEl","$84b9dae4df53835d$var$minEl","$84b9dae4df53835d$var$secEl","classList","add","$84b9dae4df53835d$var$userDate","$84b9dae4df53835d$var$pad","String","padStart","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","console","log","now","Notify","failure","disabled","remove","$84b9dae4df53835d$var$timer","Timer","this","isActive","timerId","setInterval","ms","minute","hour","day","currentTime","deltaTime","components","second","days","Math","floor","hours","minutes","seconds","textContent","_this","stop","innerHTML","clearInterval","flatpickr","addEventListener","timerStart"],"version":3,"file":"02-timer.d7acc128.js.map"}